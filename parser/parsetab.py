
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPIPECAT DOUBLE_QUOTES ECHO EQ EXIT PIPE PWD SINGLE_QUOTES SYMBOLS WCexpr : CAT\n            | ECHO\n            | WC\n            | PWD\n            | EXIT\n            | CAT args\n            | ECHO args\n            | WC args\n            | PWD args\n            | EXIT args\n            | SYMBOLS EQ SYMBOLS\n            | expr PIPE exprexpr : SYMBOLS EQ SINGLE_QUOTES\n            | SYMBOLS EQ DOUBLE_QUOTES args : arg\n             | args argarg : SYMBOLSarg  : SINGLE_QUOTES\n            | DOUBLE_QUOTES'
    
_lr_action_items = {'CAT':([0,8,],[2,2,]),'ECHO':([0,8,],[3,3,]),'WC':([0,8,],[4,4,]),'PWD':([0,8,],[5,5,]),'EXIT':([0,8,],[6,6,]),'SYMBOLS':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,20,],[7,11,11,11,11,11,7,11,-15,-17,-18,-19,11,11,11,11,21,-16,]),'$end':([1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,19,20,21,22,23,],[0,-1,-2,-3,-4,-5,-6,-15,-17,-18,-19,-7,-8,-9,-10,-12,-16,-11,-13,-14,]),'PIPE':([1,2,3,4,5,6,9,10,11,12,13,14,15,16,17,19,20,21,22,23,],[8,-1,-2,-3,-4,-5,-6,-15,-17,-18,-19,-7,-8,-9,-10,-12,-16,-11,-13,-14,]),'SINGLE_QUOTES':([2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,20,],[12,12,12,12,12,12,-15,-17,-18,-19,12,12,12,12,22,-16,]),'DOUBLE_QUOTES':([2,3,4,5,6,9,10,11,12,13,14,15,16,17,18,20,],[13,13,13,13,13,13,-15,-17,-18,-19,13,13,13,13,23,-16,]),'EQ':([7,],[18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,8,],[1,19,]),'args':([2,3,4,5,6,],[9,14,15,16,17,]),'arg':([2,3,4,5,6,9,14,15,16,17,],[10,10,10,10,10,20,20,20,20,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> CAT','expr',1,'p_expr_commands','yacc.py',28),
  ('expr -> ECHO','expr',1,'p_expr_commands','yacc.py',29),
  ('expr -> WC','expr',1,'p_expr_commands','yacc.py',30),
  ('expr -> PWD','expr',1,'p_expr_commands','yacc.py',31),
  ('expr -> EXIT','expr',1,'p_expr_commands','yacc.py',32),
  ('expr -> CAT args','expr',2,'p_expr_commands','yacc.py',33),
  ('expr -> ECHO args','expr',2,'p_expr_commands','yacc.py',34),
  ('expr -> WC args','expr',2,'p_expr_commands','yacc.py',35),
  ('expr -> PWD args','expr',2,'p_expr_commands','yacc.py',36),
  ('expr -> EXIT args','expr',2,'p_expr_commands','yacc.py',37),
  ('expr -> SYMBOLS EQ SYMBOLS','expr',3,'p_expr_commands','yacc.py',38),
  ('expr -> expr PIPE expr','expr',3,'p_expr_commands','yacc.py',39),
  ('expr -> SYMBOLS EQ SINGLE_QUOTES','expr',3,'p_expr_eq_quotes','yacc.py',54),
  ('expr -> SYMBOLS EQ DOUBLE_QUOTES','expr',3,'p_expr_eq_quotes','yacc.py',55),
  ('args -> arg','args',1,'p_args','yacc.py',60),
  ('args -> args arg','args',2,'p_args','yacc.py',61),
  ('arg -> SYMBOLS','arg',1,'p_arg','yacc.py',71),
  ('arg -> SINGLE_QUOTES','arg',1,'p_arg_quotes','yacc.py',76),
  ('arg -> DOUBLE_QUOTES','arg',1,'p_arg_quotes','yacc.py',77),
]
